basePath: /api/v1
definitions:
  types.ApiAlbum:
    properties:
      artistId:
        type: string
      coverArt:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  types.ApiArtist:
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
    type: object
  types.ApiError:
    properties:
      data: {}
      message:
        type: string
      status:
        example: 400
        type: integer
    type: object
  types.ApiGetAlbumByIdData:
    properties:
      artistId:
        type: string
      coverArt:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  types.ApiGetAlbumTracksByIdData:
    properties:
      tracks:
        items:
          $ref: '#/definitions/types.ApiTrack'
        type: array
    type: object
  types.ApiGetAlbumsData:
    properties:
      albums:
        items:
          $ref: '#/definitions/types.ApiAlbum'
        type: array
    type: object
  types.ApiGetArtistAlbumsByIdData:
    properties:
      albums:
        items:
          $ref: '#/definitions/types.ApiAlbum'
        type: array
    type: object
  types.ApiGetArtistByIdData:
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
    type: object
  types.ApiGetArtistsData:
    properties:
      artists:
        items:
          $ref: '#/definitions/types.ApiArtist'
        type: array
    type: object
  types.ApiGetSyncData:
    properties:
      syncing:
        type: boolean
    type: object
  types.ApiGetTrackByIdData:
    properties:
      albumId:
        type: string
      artistId:
        type: string
      bestQualityFile:
        type: string
      coverArt:
        type: string
      id:
        type: string
      mobileQualityFile:
        type: string
      name:
        type: string
      number:
        type: integer
    type: object
  types.ApiGetTracksData:
    properties:
      tracks:
        items:
          $ref: '#/definitions/types.ApiGetTracksDataTrackItem'
        type: array
    type: object
  types.ApiGetTracksDataTrackItem:
    properties:
      albumId:
        type: string
      albumName:
        type: string
      artistId:
        type: string
      artistName:
        type: string
      bestQualityFile:
        type: string
      coverArt:
        type: string
      id:
        type: string
      mobileQualityFile:
        type: string
      name:
        type: string
      number:
        type: integer
    type: object
  types.ApiPostSyncData:
    type: object
  types.ApiResponse-types_ApiGetAlbumByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetAlbumByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetAlbumTracksByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetAlbumTracksByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetAlbumsData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetAlbumsData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetArtistAlbumsByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetArtistAlbumsByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetArtistByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetArtistByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetArtistsData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetArtistsData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetSyncData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetSyncData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetTrackByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetTrackByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetTracksData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetTracksData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiPostSyncData:
    properties:
      data:
        $ref: '#/definitions/types.ApiPostSyncData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiTrack:
    properties:
      albumId:
        type: string
      artistId:
        type: string
      bestQualityFile:
        type: string
      coverArt:
        type: string
      id:
        type: string
      mobileQualityFile:
        type: string
      name:
        type: string
      number:
        type: integer
    type: object
info:
  contact: {}
  title: Dwebble API
paths:
  /albums:
    get:
      description: Get all albums
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetAlbumsData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all albums
      tags:
      - albums
  /albums/{id}:
    get:
      description: Get album by id
      parameters:
      - description: Album Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetAlbumByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get album by id
      tags:
      - albums
  /albums/{id}/tracks:
    get:
      description: Get all tracks from album
      parameters:
      - description: Artist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetAlbumTracksByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all tracks from album
      tags:
      - albums
  /artists:
    get:
      description: Get all artists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetArtistsData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all artists
      tags:
      - artists
  /artists/{id}:
    get:
      description: Get artist by id
      parameters:
      - description: Artist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetArtistByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get artist by id
      tags:
      - artists
  /artists/{id}/albums:
    get:
      description: Get all albums by artist
      parameters:
      - description: Artist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetArtistAlbumsByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all albums by artist
      tags:
      - artists
  /sync:
    get:
      description: Get sync status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetSyncData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get sync status
      tags:
      - sync
    post:
      description: Sync Library
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiPostSyncData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Sync Library
      tags:
      - sync
  /tracks:
    get:
      description: Get all tracks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetTracksData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all tracks
      tags:
      - tracks
  /tracks/{id}:
    get:
      description: Get track by id
      parameters:
      - description: Track Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetTrackByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get track by id
      tags:
      - tracks
swagger: "2.0"
