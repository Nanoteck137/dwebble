basePath: /api/v1
definitions:
  types.ApiAlbum:
    properties:
      artistId:
        type: string
      coverArt:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  types.ApiArtist:
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
    type: object
  types.ApiError:
    properties:
      data: {}
      message:
        type: string
      status:
        example: 400
        type: integer
    type: object
  types.ApiGetArtistAlbumsByIdData:
    properties:
      albums:
        items:
          $ref: '#/definitions/types.ApiAlbum'
        type: array
    type: object
  types.ApiGetArtistByIdData:
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
    type: object
  types.ApiGetArtistsData:
    properties:
      artists:
        items:
          $ref: '#/definitions/types.ApiArtist'
        type: array
    type: object
  types.ApiPostArtistData:
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
    type: object
  types.ApiResponse-types_ApiGetArtistAlbumsByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetArtistAlbumsByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetArtistByIdData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetArtistByIdData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiGetArtistsData:
    properties:
      data:
        $ref: '#/definitions/types.ApiGetArtistsData'
      status:
        example: 200
        type: integer
    type: object
  types.ApiResponse-types_ApiPostArtistData:
    properties:
      data:
        $ref: '#/definitions/types.ApiPostArtistData'
      status:
        example: 200
        type: integer
    type: object
info:
  contact: {}
  title: Testing Testing
paths:
  /artists:
    get:
      description: Get all artists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetArtistsData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all artists
      tags:
      - artists
    post:
      consumes:
      - multipart/form-data
      description: Create new artist
      parameters:
      - description: Artist name
        in: formData
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiPostArtistData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Create new artist
      tags:
      - artists
  /artists/{id}:
    get:
      description: Get artist by id
      parameters:
      - description: Artist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetArtistByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get artist by id
      tags:
      - artists
  /artists/{id}/albums:
    get:
      description: Get all albums by artist
      parameters:
      - description: Artist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse-types_ApiGetArtistAlbumsByIdData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get all albums by artist
      tags:
      - artists
swagger: "2.0"
