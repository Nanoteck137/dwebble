// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: artists.sql

package database

import (
	"context"
)

const getAllArtists = `-- name: GetAllArtists :many
SELECT id, name, picture FROM artists
`

func (q *Queries) GetAllArtists(ctx context.Context) ([]Artist, error) {
	rows, err := q.db.Query(ctx, getAllArtists)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Artist{}
	for rows.Next() {
		var i Artist
		if err := rows.Scan(&i.ID, &i.Name, &i.Picture); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getArtist = `-- name: GetArtist :one
SELECT id, name, picture FROM artists WHERE id=$1
`

func (q *Queries) GetArtist(ctx context.Context, id string) (Artist, error) {
	row := q.db.QueryRow(ctx, getArtist, id)
	var i Artist
	err := row.Scan(&i.ID, &i.Name, &i.Picture)
	return i, err
}
