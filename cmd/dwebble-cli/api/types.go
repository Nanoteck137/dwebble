// THIS FILE IS GENERATED BY PYRIN GOGEN CODE GENERATOR
package api

type Page struct {
	Page int `json:"page"`
	PerPage int `json:"perPage"`
	TotalItems int `json:"totalItems"`
	TotalPages int `json:"totalPages"`
}

type Name struct {
	Default string `json:"default"`
	Other *string `json:"other,omitempty"`
}

type Images struct {
	Original string `json:"original"`
	Small string `json:"small"`
	Medium string `json:"medium"`
	Large string `json:"large"`
}

type Artist struct {
	Id string `json:"id"`
	Name Name `json:"name"`
	Picture Images `json:"picture"`
	Tags []string `json:"tags"`
	Created int `json:"created"`
	Updated int `json:"updated"`
}

type GetArtists struct {
	Page Page `json:"page"`
	Artists []Artist `json:"artists"`
}

type GetArtistById Artist

type ArtistInfo struct {
	Id string `json:"id"`
	Name Name `json:"name"`
}

type Album struct {
	Id string `json:"id"`
	Name Name `json:"name"`
	Year *int `json:"year,omitempty"`
	CoverArt Images `json:"coverArt"`
	ArtistId string `json:"artistId"`
	ArtistName Name `json:"artistName"`
	Tags []string `json:"tags"`
	FeaturingArtists []ArtistInfo `json:"featuringArtists"`
	AllArtists []ArtistInfo `json:"allArtists"`
	Created int `json:"created"`
	Updated int `json:"updated"`
}

type GetArtistAlbumsById struct {
	Albums []Album `json:"albums"`
}

type EditArtistBody struct {
	Name *string `json:"name,omitempty"`
	OtherName *string `json:"otherName,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
}

type CreateArtist struct {
	Id string `json:"id"`
}

type CreateArtistBody struct {
	Name string `json:"name"`
	OtherName string `json:"otherName"`
}

type MergeArtistsBody struct {
	Artists []string `json:"artists"`
}

type GetAlbums struct {
	Page Page `json:"page"`
	Albums []Album `json:"albums"`
}

type GetAlbumById Album

type Track struct {
	Id string `json:"id"`
	Name Name `json:"name"`
	Duration int `json:"duration"`
	Number *int `json:"number,omitempty"`
	Year *int `json:"year,omitempty"`
	CoverArt Images `json:"coverArt"`
	AlbumId string `json:"albumId"`
	AlbumName Name `json:"albumName"`
	Artists []ArtistInfo `json:"artists"`
	Tags []string `json:"tags"`
	Created int `json:"created"`
	Updated int `json:"updated"`
}

type GetAlbumTracks struct {
	Tracks []Track `json:"tracks"`
}

type TrackDetails struct {
	Id string `json:"id"`
	Name Name `json:"name"`
	Duration int `json:"duration"`
	Number *int `json:"number,omitempty"`
	Year *int `json:"year,omitempty"`
	CoverArt Images `json:"coverArt"`
	AlbumId string `json:"albumId"`
	AlbumName Name `json:"albumName"`
	ArtistId string `json:"artistId"`
	ArtistName Name `json:"artistName"`
	Tags []string `json:"tags"`
	FeaturingArtists []ArtistInfo `json:"featuringArtists"`
	Created int `json:"created"`
	Updated int `json:"updated"`
}

type GetAlbumTracksDetails struct {
	Tracks []TrackDetails `json:"tracks"`
}

type EditAlbumBody struct {
	Name *string `json:"name,omitempty"`
	OtherName *string `json:"otherName,omitempty"`
	ArtistId *string `json:"artistId,omitempty"`
	Year *int `json:"year,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	FeaturingArtists *[]string `json:"featuringArtists,omitempty"`
}

type CreateAlbum struct {
	AlbumId string `json:"albumId"`
}

type CreateAlbumBody struct {
	Name string `json:"name"`
	OtherName string `json:"otherName"`
	ArtistId string `json:"artistId"`
	Year int `json:"year"`
	Tags []string `json:"tags"`
	FeaturingArtists []string `json:"featuringArtists"`
}

type GetTracks struct {
	Page Page `json:"page"`
	Tracks []Track `json:"tracks"`
}

type GetDetailedTracks struct {
	Page Page `json:"page"`
	Tracks []TrackDetails `json:"tracks"`
}

type GetTrackById Track

type GetTrackDetails TrackDetails

type EditTrackBody struct {
	Name *string `json:"name,omitempty"`
	OtherName *string `json:"otherName,omitempty"`
	ArtistId *string `json:"artistId,omitempty"`
	Year *int `json:"year,omitempty"`
	Number *int `json:"number,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	FeaturingArtists *[]string `json:"featuringArtists,omitempty"`
}

type UploadTrackBody struct {
	Name string `json:"name"`
	OtherName string `json:"otherName"`
	Number int `json:"number"`
	Year int `json:"year"`
	AlbumId string `json:"albumId"`
	ArtistId string `json:"artistId"`
	Tags []string `json:"tags"`
	FeaturingArtists []string `json:"featuringArtists"`
}

type Signup struct {
	Id string `json:"id"`
	Username string `json:"username"`
}

type SignupBody struct {
	Username string `json:"username"`
	Password string `json:"password"`
	PasswordConfirm string `json:"passwordConfirm"`
}

type Signin struct {
	Token string `json:"token"`
}

type SigninBody struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type ChangePasswordBody struct {
	CurrentPassword string `json:"currentPassword"`
	NewPassword string `json:"newPassword"`
	NewPasswordConfirm string `json:"newPasswordConfirm"`
}

type GetMe struct {
	Id string `json:"id"`
	Username string `json:"username"`
	Role string `json:"role"`
	DisplayName string `json:"displayName"`
	QuickPlaylist *string `json:"quickPlaylist,omitempty"`
}

type Playlist struct {
	Id string `json:"id"`
	Name string `json:"name"`
}

type GetPlaylists struct {
	Playlists []Playlist `json:"playlists"`
}

type CreatePlaylist Playlist

type CreatePlaylistBody struct {
	Name string `json:"name"`
}

type PostPlaylistFilterBody struct {
	Name string `json:"name"`
	Filter string `json:"filter"`
}

type GetPlaylistById Playlist

type GetPlaylistItems struct {
	Page Page `json:"page"`
	Items []Track `json:"items"`
}

type AddItemToPlaylistBody struct {
	TrackId string `json:"trackId"`
}

type RemovePlaylistItemBody struct {
	TrackId string `json:"trackId"`
}

type GetSystemInfo struct {
	Version string `json:"version"`
}

type Report struct {
	Type string `json:"type"`
	Message string `json:"message"`
	FullMessage *string `json:"fullMessage,omitempty"`
}

type SyncStatus struct {
	IsSyncing bool `json:"isSyncing"`
	LastReports []Report `json:"lastReports"`
}

type Taglist struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Filter string `json:"filter"`
	Created int `json:"created"`
	Updated int `json:"updated"`
}

type GetTaglists struct {
	Taglists []Taglist `json:"taglists"`
}

type GetTaglistById Taglist

type GetTaglistTracks struct {
	Page Page `json:"page"`
	Tracks []Track `json:"tracks"`
}

type CreateTaglist struct {
	Id string `json:"id"`
}

type CreateTaglistBody struct {
	Name string `json:"name"`
	Filter string `json:"filter"`
}

type UpdateTaglistBody struct {
	Name *string `json:"name,omitempty"`
	Filter *string `json:"filter,omitempty"`
}

type UpdateUserSettingsBody struct {
	DisplayName *string `json:"displayName,omitempty"`
	QuickPlaylist *string `json:"quickPlaylist,omitempty"`
}

type TrackId struct {
	TrackId string `json:"trackId"`
}

type GetUserQuickPlaylistItemIds struct {
	TrackIds []string `json:"trackIds"`
}

type CreateApiToken struct {
	Token string `json:"token"`
}

type CreateApiTokenBody struct {
	Name string `json:"name"`
}

type ApiToken struct {
	Id string `json:"id"`
	Name string `json:"name"`
}

type GetAllApiTokens struct {
	Tokens []ApiToken `json:"tokens"`
}

type MediaResource struct {
	Id string `json:"id"`
	Name string `json:"name"`
}

type MediaItem struct {
	Track MediaResource `json:"track"`
	Artists []MediaResource `json:"artists"`
	Album MediaResource `json:"album"`
	CoverArt Images `json:"coverArt"`
	MediaType string `json:"mediaType"`
	MediaUrl *string `json:"mediaUrl,omitempty"`
}

type GetMedia struct {
	Items []MediaItem `json:"items"`
}

type GetMediaCommonBody struct {
	MediaType string `json:"mediaType"`
	Shuffle bool `json:"shuffle"`
	Sort string `json:"sort"`
	Limit int `json:"limit"`
	Offset int `json:"offset"`
}

type GetMediaFromPlaylistBody GetMediaCommonBody

type GetMediaFromTaglistBody GetMediaCommonBody

type GetMediaFromFilterBody struct {
	MediaType string `json:"mediaType"`
	Shuffle bool `json:"shuffle"`
	Sort string `json:"sort"`
	Limit int `json:"limit"`
	Offset int `json:"offset"`
	Filter string `json:"filter"`
}

type GetMediaFromArtistBody GetMediaCommonBody

type GetMediaFromAlbumBody GetMediaCommonBody

type GetMediaFromIdsBody struct {
	MediaType string `json:"mediaType"`
	Shuffle bool `json:"shuffle"`
	Sort string `json:"sort"`
	Limit int `json:"limit"`
	Offset int `json:"offset"`
	TrackIds []string `json:"trackIds"`
	KeepOrder bool `json:"keepOrder"`
}

